/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Coding;

import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.time.LocalDate;
import javax.swing.JOptionPane;

public class UpdateCard extends javax.swing.JFrame {

    private static Connection con;
    private static Statement stmt;
    private static ResultSet rs;
    private static ResultSet rs1;
    String uid = "u1";
    String issue;
    String exp;
    String bissue;
    String bexp;

    public UpdateCard() {
        initComponents();
    }

    public UpdateCard(String uid) {
        initComponents();
        this.uid = uid;
        dbConnection();
        Unable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    public static void dbConnection() {
        try {
            con = ConnectionManager.getConnection();
            stmt = con.createStatement();

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Connection Error!!" + e);
        }
    }

    public void Unable() {
        txtsid.setEditable(false);
        cmbsubjct.setEnabled(false);
        dateissue.setEnabled(false);
        dateexpire.setEnabled(false);

    }

    public void setCombo() {
         String selsql = "Select Subject_ID from attendance where Card_ID ='" + txtcardid.getText() + "' AND MONTH(Card_IssueDate) =MONTH(CURRENT_DATE()) AND YEAR(Card_IssueDate) = YEAR(CURRENT_DATE()) ";
        try {
            rs = stmt.executeQuery(selsql);

            while (rs.next()) {
                cmbsubjct.addItem(rs.getString("Subject_ID"));
            }
            cmbsubjct.setEnabled(true);
            txtcardid.setEditable(false);

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex);
            txtcardid.setEditable(true);

        }

    }

    public void setDate() {
        try {
            String check = "SELECT `Card_IssueDate`, `Card_ExpiaryDate` FROM `attendance` where Card_ID ='" + txtcardid.getText() + "' AND Subject_ID='" + cmbsubjct.getSelectedItem().toString() + "'"
                    + "AND Student_ID='" + txtsid.getText() + "'";
            rs = stmt.executeQuery(check);
            rs.next();
            dateissue.setDate(rs.getDate("Card_IssueDate"));
            dateexpire.setDate(rs.getDate("Card_ExpiaryDate"));
            String.format("%1$tY-%1$tm-%1$td", dateissue.getDate());
            bissue = String.format("%1$tY-%1$tm-%1$td", dateissue.getDate());
            bexp = String.format("%1$tY-%1$tm-%1$td", dateexpire.getDate());

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Invalid Card!!!");
        }
    }

    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtlogid = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtcardid = new javax.swing.JTextField();
        btncheck = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txtsid = new javax.swing.JTextField();
        txtname = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        cmbsubjct = new javax.swing.JComboBox<>();
        txtgrade = new javax.swing.JTextField();
        txtsubname = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        dateissue = new com.toedter.calendar.JDateChooser();
        jLabel6 = new javax.swing.JLabel();
        dateexpire = new com.toedter.calendar.JDateChooser();
        btnupdate = new javax.swing.JButton();
        btnclear = new javax.swing.JButton();
        btnback = new javax.swing.JButton();
        btndelete = new javax.swing.JButton();
        btndatecheck = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Update Card");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtlogid.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtlogid.setText("U1");
        getContentPane().add(txtlogid, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 10, 40, 20));

        jPanel1.setOpaque(false);

        jLabel1.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        jLabel1.setText("Card ID          :");

        txtcardid.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        txtcardid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtcardidActionPerformed(evt);
            }
        });
        txtcardid.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtcardidKeyPressed(evt);
            }
        });

        btncheck.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/Skip-forward-icon (1).png"))); // NOI18N
        btncheck.setBorderPainted(false);
        btncheck.setContentAreaFilled(false);
        btncheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncheckActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        jLabel2.setText("Student ID     :");

        txtsid.setEditable(false);
        txtsid.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N

        txtname.setEditable(false);
        txtname.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtnameMouseClicked(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        jLabel3.setText("Subject ID      :");

        cmbsubjct.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {}));
        cmbsubjct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbsubjctActionPerformed(evt);
            }
        });

        txtgrade.setEditable(false);
        txtgrade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtgradeActionPerformed(evt);
            }
        });

        txtsubname.setEditable(false);

        jLabel7.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        jLabel7.setText("Subject :");

        jLabel4.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        jLabel4.setText("Grade :");

        jLabel5.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        jLabel5.setText("Issue Date      :");

        dateissue.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                dateissuePropertyChange(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        jLabel6.setText("Expire Date    :");

        dateexpire.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                dateexpirePropertyChange(evt);
            }
        });

        btnupdate.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnupdate.setText("Update");
        btnupdate.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnupdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnupdateActionPerformed(evt);
            }
        });

        btnclear.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnclear.setText("Clear");
        btnclear.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnclear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnclearActionPerformed(evt);
            }
        });

        btnback.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnback.setText("Back");
        btnback.setBorderPainted(false);
        btnback.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnback.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnbackActionPerformed(evt);
            }
        });

        btndelete.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btndelete.setText("Delete");
        btndelete.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btndelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btndeleteActionPerformed(evt);
            }
        });

        btndatecheck.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/Skip-forward-icon (1).png"))); // NOI18N
        btndatecheck.setBorderPainted(false);
        btndatecheck.setContentAreaFilled(false);
        btndatecheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btndatecheckActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(24, 24, 24)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(txtcardid, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btncheck, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtsid, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(2, 2, 2)
                                        .addComponent(cmbsubjct, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(btndatecheck, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel4)))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtname, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(txtgrade, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel7)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtsubname, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(172, 172, 172))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(btndelete, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel6))
                                        .addGap(24, 24, 24)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(dateissue, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(dateexpire, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(34, 34, 34)
                                .addComponent(btnclear, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(btnupdate, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnback)
                        .addGap(138, 138, 138))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtcardid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1)))
                    .addComponent(btncheck, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtsid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cmbsubjct, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtgrade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtsubname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)
                            .addComponent(jLabel7)
                            .addComponent(jLabel3))
                        .addGap(27, 27, 27))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btndatecheck)
                        .addGap(18, 18, 18)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(dateissue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dateexpire, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnupdate, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnclear)
                    .addComponent(btnback)
                    .addComponent(btndelete))
                .addGap(90, 90, 90))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 37, 657, -1));

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/MTAyNHg3Njg,14811486_14707124.jpg"))); // NOI18N
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 740, 500));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txtcardidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtcardidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtcardidActionPerformed

    private void txtcardidKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtcardidKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            try {
                String check = "SELECT `Card_ID`,`Student_ID` FROM `attendance` where Card_ID ='" + txtcardid.getText() + "' ";
                rs = stmt.executeQuery(check);
                while (rs.next()) {
                    if (rs.getString("Card_ID").equals(txtcardid.getText())) {

                        txtsid.setText(rs.getString("Student_ID"));
                        cmbsubjct.setEnabled(true);
                        setCombo();

                    } else {
                        txtcardid.setEditable(false);
                        JOptionPane.showMessageDialog(null, "Invalid Card ID!!!");

                    }
                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Invalid Card ID!!!");
            }
        }
    }//GEN-LAST:event_txtcardidKeyPressed

    private void btncheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncheckActionPerformed
        try {
            String check = "SELECT `Card_ID`,`Student_ID` FROM `attendance` where Card_ID ='" + txtcardid.getText() + "' ";
            rs = stmt.executeQuery(check);
            while (rs.next()) {
                if (rs.getString("Card_ID").equals(txtcardid.getText())) {

                    txtsid.setText(rs.getString("Student_ID"));
                    cmbsubjct.setEnabled(true);
                    setCombo();

                } else {
                    txtcardid.setEditable(false);
                    JOptionPane.showMessageDialog(null, "Invalid Card ID!!!");

                }
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Invalid Card ID!!!");
        }
    }//GEN-LAST:event_btncheckActionPerformed

    private void cmbsubjctActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbsubjctActionPerformed
        String sbid = cmbsubjct.getSelectedItem().toString();

        String check = "Select Subject_Name,Grade from subject where Subject_ID=?";

        try {
            PreparedStatement pst;
            pst = con.prepareStatement(check);
            pst.setString(1, sbid);
            rs1 = pst.executeQuery();
            while (rs1.next()) {
                txtsubname.setText(rs1.getString("Subject_Name"));
                txtgrade.setText(rs1.getString("Grade"));
            }

            dateissue.setEnabled(true);
            //setDate();

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Subject ID is Incorrect!!!");

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex);

        }
    }//GEN-LAST:event_cmbsubjctActionPerformed

    private void txtgradeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtgradeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtgradeActionPerformed

    private void dateissuePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_dateissuePropertyChange

        issue = String.format("%1$tY-%1$tm-%1$td", dateissue.getDate());
        if (issue.equals("")) {
            dateexpire.setEnabled(false);
        } else {
            dateexpire.setEnabled(true);
        }
    }//GEN-LAST:event_dateissuePropertyChange

    private void dateexpirePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_dateexpirePropertyChange

        exp = String.format("%1$tY-%1$tm-%1$td", dateexpire.getDate());

    }//GEN-LAST:event_dateexpirePropertyChange

    private void btnupdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnupdateActionPerformed
        try {
            if (txtcardid.getText().equals("") || txtsid.getText().equals("") || cmbsubjct.getSelectedItem().toString().equals("") || dateissue.getDate().equals(null)
                    || dateexpire.getDate().equals(null)) {
                JOptionPane.showMessageDialog(null, "Add required Details!!");
            } else {
                LocalDate ld1 = LocalDate.parse(exp);
                LocalDate ld2 = LocalDate.parse(issue);
                LocalDate ld3 = LocalDate.parse(bissue);
                LocalDate ld4 = LocalDate.parse(bexp);
                if (!ld3.isEqual(ld2) && !ld3.isEqual(ld4)) {
                    if (JOptionPane.showConfirmDialog(null, "Do you want to re new the card??  ", "Attention!!",
                            JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
                        if (ld2.isBefore(ld1) || ld2.isEqual(ld1)) {
                            String newsql = "insert into attendance (`Card_ID`, `Student_ID`, `Subject_ID`, `NumberOfDaysAttend`, `Card_IssueDate`, `Card_ExpiaryDate`)"
                                    + " values(?,?,?,?,?,?)";
                            PreparedStatement pst;
                            pst = con.prepareStatement(newsql);

                            pst.setString(1, txtcardid.getText());
                            pst.setString(2, txtsid.getText());
                            pst.setString(3, cmbsubjct.getSelectedItem().toString());
                            pst.setInt(4, 0);
                            pst.setString(5, issue);
                            pst.setString(6, exp);

                            pst.executeUpdate();

                            JOptionPane.showMessageDialog(null, "Successfully Added!!");

                        } else {
                            JOptionPane.showMessageDialog(null, "Check the Dates Again!!!");
                            dateexpire.setDate(null);

                        }
                    }

                }

            }

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Student already enroll for the subject!!! " + ex);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Acces Denied!!\n"+ex);
        }
    }//GEN-LAST:event_btnupdateActionPerformed

    private void btnclearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnclearActionPerformed
        new UpdateCard().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_btnclearActionPerformed

    private void btnbackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnbackActionPerformed
        this.setVisible(false);
        new Attendance(uid).setVisible(true);
    }//GEN-LAST:event_btnbackActionPerformed

    private void txtnameMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtnameMouseClicked
        try {
            String check = "Select Student_Name from student where Student_ID='" + txtsid.getText() + "'";
            rs = stmt.executeQuery(check);
            rs.next();
            txtname.setText(rs.getString("Student_Name"));

            cmbsubjct.setEnabled(true);

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Student ID is Incorrect!!!");
            txtsid.setText("");
            txtname.setText("");
        }
    }//GEN-LAST:event_txtnameMouseClicked

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        txtlogid.setText(uid);
    }//GEN-LAST:event_formWindowOpened

    private void btndeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btndeleteActionPerformed
        try {

            String delsql = "Delete from Attendance WHERE Card_ID ='" + txtcardid.getText() + "' AND Subject_ID='" + cmbsubjct.getSelectedItem().toString() + "'"
                    + "AND Student_ID='" + txtsid.getText() + "' ";
            if (JOptionPane.showConfirmDialog(null, "Are you want to Delete " + txtsubname.getText() + " ?", "Delete",
                    JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
                stmt.executeUpdate(delsql);
                JOptionPane.showMessageDialog(null, "Successfully Deleted!!!\n\n");
                this.setVisible(false);
                new UpdateCard(uid).setVisible(true);
            }

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Unable to Delete!!!\n\n");
        }
    }//GEN-LAST:event_btndeleteActionPerformed

    private void btndatecheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btndatecheckActionPerformed
        setDate();
    }//GEN-LAST:event_btndatecheckActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UpdateCard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UpdateCard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UpdateCard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UpdateCard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UpdateCard().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnback;
    private javax.swing.JButton btncheck;
    private javax.swing.JButton btnclear;
    private javax.swing.JButton btndatecheck;
    private javax.swing.JButton btndelete;
    private javax.swing.JButton btnupdate;
    private javax.swing.JComboBox<String> cmbsubjct;
    private com.toedter.calendar.JDateChooser dateexpire;
    private com.toedter.calendar.JDateChooser dateissue;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField txtcardid;
    private javax.swing.JTextField txtgrade;
    private javax.swing.JLabel txtlogid;
    private javax.swing.JTextField txtname;
    private javax.swing.JTextField txtsid;
    private javax.swing.JTextField txtsubname;
    // End of variables declaration//GEN-END:variables
}
